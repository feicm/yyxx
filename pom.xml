<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。
    并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app-->
    <groupId>com.yyxx.app</groupId>
    <!-- 构件的标识符，它和group ID一起唯一标识一个构件。
    换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；
    在某个 特定的group ID下，artifact ID也必须是唯一的。
    构件是项目产生的或使用的一个东西，
    Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。-->
    <artifactId>yyxx</artifactId>
    <!--项目产生的构件类型，例如jar、war、ear、pom。
    插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型-->
    <packaging>war</packaging>
    <!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号-->
    <version>0.0.1-SNAPSHOT</version>
    <!--项目的名称, Maven产生的文档用-->
    <name>yyxx</name>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <!-- 设置dist目录为Web目录 -->
                    <webappDirectory>./dist</webappDirectory>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                  <execution>
                     <!-- 打包文件 -->
                     <id>npm deploy</id>
                     <phase>prepare-package</phase>
                     <goals>
                       <goal>exec</goal>
                     </goals>
                     <configuration>
                       <executable>npm</executable>
                       <workingDirectory>./</workingDirectory>
                       <arguments>
                       <argument>run</argument>
                       <argument>compile</argument>
                       </arguments>
                     </configuration>
                   </execution>
                 </executions>
              </plugin>
        </plugins>
    </build>
</project>
